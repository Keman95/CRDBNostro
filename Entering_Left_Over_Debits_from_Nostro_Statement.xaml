<Activity mc:Ignorable="sap sap2010" x:Class="Entering_Left_Over_Debits_from_Nostro_Statement" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ueabf="clr-namespace:UiPath.Excel.Activities.Business.Filter;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="In_Nostro_Statement" Type="InArgument(x:String)" />
    <x:Property Name="In_Section" Type="InArgument(x:String)" />
    <x:Property Name="In_Sheet" Type="InArgument(x:String)" />
    <x:Property Name="In_Recon_File" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1010,4363</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Entering_Left_Over_Debits_from_Nostro_Statement_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="34">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Excel.Activities.Business.Filter</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="48">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Entering_Left_Over_Debits_from_Nostro_Statement" sap:VirtualizedContainerService.HintSize="1020,4298" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="strRef_Ord" />
      <Variable x:TypeArguments="x:String" Name="strAmount" />
      <Variable x:TypeArguments="x:String" Name="strDate" />
      <Variable x:TypeArguments="sd:DataTable" Name="newDTBL" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="958,4014" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1">
      <ueab:ExcelProcessScopeX.Body>
        <ActivityAction x:TypeArguments="ui:IExcelProcess">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
          </ActivityAction.Argument>
          <Sequence sap:VirtualizedContainerService.HintSize="924,3918" sap2010:WorkflowViewState.IdRef="Sequence_17">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="862,3796" sap2010:WorkflowViewState.IdRef="Sequence_16">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="800,3674" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" TemplatePath="C:\Users\RPA\Desktop\TestFolder\SWIFT MT940 CITIBANK  NEWYORK STATEMENT DATED 27 OCT 2022.xlsx" UseTemplate="True" WorkbookPath="[In_Nostro_Statement]">
                <ueab:ExcelApplicationCard.Body>
                  <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="766,3373" sap2010:WorkflowViewState.IdRef="Sequence_15">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="Table" />
                        <Variable x:TypeArguments="ue:IReadWriteRangeRef" Name="TableDest" />
                        <Variable x:TypeArguments="x:String" Name="dataTbl" />
                        <Variable x:TypeArguments="x:Int32" Name="TotlaRows" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ueab:FilterX ClearFilter="False" ColumnName="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;A1&quot;)]" DisplayName="Filter" HasHeaders="True" sap:VirtualizedContainerService.HintSize="704,178" sap2010:WorkflowViewState.IdRef="FilterX_1" Range="[Excel.Sheet(&quot;Sheet1&quot;)]">
                        <ueab:FilterX.FilterArgument>
                          <ueabf:FilterArgument Mode="Basic">
                            <ueabf:FilterArgument.AdvancedFiltersArgument>
                              <ueabf:AdvancedFilterArgument LogicalOperator="And">
                                <ueabf:AdvancedFilterArgument.Condition1>
                                  <ueabf:AdvancedFilterCondition Value="{x:Null}" Operator="NONE" />
                                </ueabf:AdvancedFilterArgument.Condition1>
                                <ueabf:AdvancedFilterArgument.Condition2>
                                  <ueabf:AdvancedFilterCondition Value="{x:Null}" Operator="NONE" />
                                </ueabf:AdvancedFilterArgument.Condition2>
                              </ueabf:AdvancedFilterArgument>
                            </ueabf:FilterArgument.AdvancedFiltersArgument>
                            <ueabf:FilterArgument.BasicFiltersArgument>
                              <ueabf:BasicFilterArgument>
                                <ueabf:BasicFilterArgument.BasicFilters>
                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="1">
                                    <InArgument x:TypeArguments="x:String" xml:space="preserve">           DebitCreditMark: Debit/Credit Mark:          D</InArgument>
                                  </scg:List>
                                </ueabf:BasicFilterArgument.BasicFilters>
                              </ueabf:BasicFilterArgument>
                            </ueabf:FilterArgument.BasicFiltersArgument>
                          </ueabf:FilterArgument>
                        </ueab:FilterX.FilterArgument>
                      </ueab:FilterX>
                      <Assign sap:VirtualizedContainerService.HintSize="704,70" sap2010:WorkflowViewState.IdRef="Assign_1">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[TotlaRows]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[Excel.Sheet("Sheet1").RowCount]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:BuildDataTable DataTable="[newDTBL]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="704,69" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Ref_OrderPartyName&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Date&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;50&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Amount&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Ref_OrderPartyName&gt;text&lt;/Ref_OrderPartyName&gt;&#xA;  &lt;/TableName&gt;&#xA;&lt;/NewDataSet&gt;" />
                      <ui:InterruptibleWhile CurrentIndex="{x:Null}" Condition="[TotlaRows &gt; 0]" DisplayName="While" sap:VirtualizedContainerService.HintSize="704,2596" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
                        <ui:InterruptibleWhile.Body>
                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="668,2421" sap2010:WorkflowViewState.IdRef="Sequence_12">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="CellADR" />
                              <Variable x:TypeArguments="x:Int32" Name="RowNumber" />
                              <Variable x:TypeArguments="x:String" Name="strRef1" />
                              <Variable x:TypeArguments="x:String" Name="hash" />
                              <Variable x:TypeArguments="x:Boolean" Name="Flag" />
                              <Variable x:TypeArguments="x:String" Name="strRef2" />
                              <Variable x:TypeArguments="x:String" Name="TransStart" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ueab:FindReplaceValueX ReplaceWith="{x:Null}" DisplayName="Find/Replace Value" FoundAt="[CellADR]" sap:VirtualizedContainerService.HintSize="606,243" sap2010:WorkflowViewState.IdRef="FindReplaceValueX_1" LookIn="Values" Operation="Find" ValueToFind="[&quot;           DebitCreditMark: Debit/Credit Mark:          D                       &quot;]" WhereToSearch="[Excel.Sheet(&quot;Sheet1&quot;)]" />
                            <Assign sap:VirtualizedContainerService.HintSize="606,70" sap2010:WorkflowViewState.IdRef="Assign_2">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[CellADR]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(CellADR,"[0-9]+(.[0-9]+)").ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <If Condition="[CellADR.IsNumeric() = true OR string.IsNullOrEmpty(CellADR) = false]" sap:VirtualizedContainerService.HintSize="606,509" sap2010:WorkflowViewState.IdRef="If_1">
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="400,192" sap2010:WorkflowViewState.IdRef="Sequence_2">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_3">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int32">[RowNumber]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int32">[CInt(CellADR)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="400,154" sap2010:WorkflowViewState.IdRef="Sequence_3">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:Continue sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Continue_1" />
                                </Sequence>
                              </If.Else>
                            </If>
                            <If Condition="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;B&quot;+CellADR) = &quot;Delete_row&quot;]" sap:VirtualizedContainerService.HintSize="606,1357" sap2010:WorkflowViewState.IdRef="If_5">
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="400,154" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:Continue sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Continue_3" />
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="524,1040" sap2010:WorkflowViewState.IdRef="Sequence_23">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Sequence DisplayName="Getting Amount and Reference Values and Date" sap:VirtualizedContainerService.HintSize="462,472" sap2010:WorkflowViewState.IdRef="Sequence_6">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="x:Int32" Name="intAmount" />
                                    </Sequence.Variables>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Sequence DisplayName="Getting the Amount" sap:VirtualizedContainerService.HintSize="400,90" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;A&quot;+(RowNumber+2).ToString)]" DisplayName="Read Cell Value" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="ReadCellValueX_1">
                                        <ueab:ReadCellValueX.SaveTo>
                                          <OutArgument x:TypeArguments="x:String">[strAmount]</OutArgument>
                                        </ueab:ReadCellValueX.SaveTo>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ueab:ReadCellValueX>
                                      <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_4">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[strAmount]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[strAmount.split(":").Last]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_5">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[strAmount]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[strAmount.Replace(" ","")]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_6">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[strAmount]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(strAmount,"\n\r\t","")]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_7">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[strAmount]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[strAmount.Substring(0,(strAmount.IndexOf("#")))]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_8">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[strAmount]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[strAmount.Replace(",",".")]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_9">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">[intAmount]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">[CInt(strAmount)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_10">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[strAmount]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[Convert.ToDecimal(intAmount).ToString("#,##0.00")]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                    <Sequence DisplayName="Getting the Reference and the ordering party" sap:VirtualizedContainerService.HintSize="400,90" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;A&quot;+(RowNumber+5).ToString)]" DisplayName="Read Cell Value" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="444,168" sap2010:WorkflowViewState.IdRef="ReadCellValueX_2">
                                        <ueab:ReadCellValueX.SaveTo>
                                          <OutArgument x:TypeArguments="x:String">[strRef1]</OutArgument>
                                        </ueab:ReadCellValueX.SaveTo>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ueab:ReadCellValueX>
                                      <Assign sap:VirtualizedContainerService.HintSize="444,70" sap2010:WorkflowViewState.IdRef="Assign_11">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[strRef1]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[strRef1.split(":").Last]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="444,70" sap2010:WorkflowViewState.IdRef="Assign_12">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[strRef1]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[strRef1.Replace(" ","")]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="444,70" sap2010:WorkflowViewState.IdRef="Assign_13">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[strRef1]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(strRef1,"\n\r\t","")]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;A&quot;+(RowNumber+10).ToString)]" DisplayName="Read Cell Value" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="444,168" sap2010:WorkflowViewState.IdRef="ReadCellValueX_3">
                                        <ueab:ReadCellValueX.SaveTo>
                                          <OutArgument x:TypeArguments="x:String">[strRef2]</OutArgument>
                                        </ueab:ReadCellValueX.SaveTo>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ueab:ReadCellValueX>
                                      <Assign sap:VirtualizedContainerService.HintSize="444,70" sap2010:WorkflowViewState.IdRef="Assign_15">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[strRef2]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(strRef2,"\n\r\t","")]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="444,70" sap2010:WorkflowViewState.IdRef="Assign_16">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[strRef2]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[strRef2.Remove(0,(strRef2.IndexOF("O")+1))]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="444,70" sap2010:WorkflowViewState.IdRef="Assign_14">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[strRef2]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[strRef2.TrimStart.TrimEnd]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="444,70" sap2010:WorkflowViewState.IdRef="Assign_20">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[strRef_Ord]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[strRef1+"_"+strRef2]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                    <Sequence DisplayName="Getting the Value Date" sap:VirtualizedContainerService.HintSize="400,90" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="x:String" Name="YY" />
                                        <Variable x:TypeArguments="x:String" Name="MM" />
                                        <Variable x:TypeArguments="x:String" Name="dd" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;A&quot;+(RowNumber-2).ToString)]" DisplayName="Read Cell Value" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="444,168" sap2010:WorkflowViewState.IdRef="ReadCellValueX_5">
                                        <ueab:ReadCellValueX.SaveTo>
                                          <OutArgument x:TypeArguments="x:String">[strDate]</OutArgument>
                                        </ueab:ReadCellValueX.SaveTo>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ueab:ReadCellValueX>
                                      <Assign sap:VirtualizedContainerService.HintSize="444,70" sap2010:WorkflowViewState.IdRef="Assign_28">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[strDate]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[strDate.Split(":").Last]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="444,70" sap2010:WorkflowViewState.IdRef="Assign_29">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[strDate]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[strDate.Trim.Substring(0,6)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="444,70" sap2010:WorkflowViewState.IdRef="Assign_30">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[YY]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[strDate.Trim.Substring(0,2)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="444,70" sap2010:WorkflowViewState.IdRef="Assign_31">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[MM]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[strDate.Trim.Substring(2,2)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="444,70" sap2010:WorkflowViewState.IdRef="Assign_32">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[dd]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[strDate.Trim.Substring(4,2)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="444,70" sap2010:WorkflowViewState.IdRef="Assign_33">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[strDate]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[MM+"/"+dd+"/20"+YY]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="444,70" sap2010:WorkflowViewState.IdRef="Assign_34">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[strDate]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[Convert.ToDateTime(strDate).ToString("dd-MMM-yyyy")]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </Sequence>
                                  <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;A&quot;+CellADR)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="462,61" sap2010:WorkflowViewState.IdRef="WriteCellX_1" Value="[&quot;           DebitCreditMark: Debit/Credit Mark:          D                       &quot;]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ueab:WriteCellX>
                                  <Assign sap:VirtualizedContainerService.HintSize="462,70" sap2010:WorkflowViewState.IdRef="Assign_18">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int32">[TotlaRows]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int32">[TotlaRows-1]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{strRef_Ord,strDate,strAmount}]" DataTable="[newDTBL]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="462,195" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </ui:InterruptibleWhile.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InterruptibleWhile>
                      <ueab:FilterX ClearFilter="True" ColumnName="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;A1&quot;)]" DisplayName="Filter" HasHeaders="True" sap:VirtualizedContainerService.HintSize="704,178" sap2010:WorkflowViewState.IdRef="FilterX_2" Range="[Excel.Sheet(&quot;Sheet1&quot;)]">
                        <ueab:FilterX.FilterArgument>
                          <ueabf:FilterArgument Mode="Basic">
                            <ueabf:FilterArgument.AdvancedFiltersArgument>
                              <ueabf:AdvancedFilterArgument LogicalOperator="And">
                                <ueabf:AdvancedFilterArgument.Condition1>
                                  <ueabf:AdvancedFilterCondition Value="{x:Null}" Operator="NONE" />
                                </ueabf:AdvancedFilterArgument.Condition1>
                                <ueabf:AdvancedFilterArgument.Condition2>
                                  <ueabf:AdvancedFilterCondition Value="{x:Null}" Operator="NONE" />
                                </ueabf:AdvancedFilterArgument.Condition2>
                              </ueabf:AdvancedFilterArgument>
                            </ueabf:FilterArgument.AdvancedFiltersArgument>
                            <ueabf:FilterArgument.BasicFiltersArgument>
                              <ueabf:BasicFilterArgument>
                                <ueabf:BasicFilterArgument.BasicFilters>
                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="1">
                                    <InArgument x:TypeArguments="x:String" xml:space="preserve">           DebitCreditMark: Debit/Credit Mark:          D                       </InArgument>
                                  </scg:List>
                                </ueabf:BasicFilterArgument.BasicFilters>
                              </ueabf:BasicFilterArgument>
                            </ueabf:FilterArgument.BasicFiltersArgument>
                          </ueabf:FilterArgument>
                        </ueab:FilterX.FilterArgument>
                      </ueab:FilterX>
                    </Sequence>
                  </ActivityAction>
                </ueab:ExcelApplicationCard.Body>
              </ueab:ExcelApplicationCard>
            </Sequence>
          </Sequence>
        </ActivityAction>
      </ueab:ExcelProcessScopeX.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ueab:ExcelProcessScopeX>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="NostroReconFile_In_NostroStatement_NewCredits.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="958,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="NostroReconFile_In_NostroStatement_NewCredits.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_FilePath">
          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="In_Recon_File" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="In_Date">
          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="strDate" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="In_Amount">
          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="strAmount" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="In_Ref">
          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="strRef_Ord" />
        </InArgument>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="In_Dtbl">
          <VisualBasicValue x:TypeArguments="sd:DataTable" ExpressionText="newDTBL" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Sheet">
          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Sheet" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Section">
          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Section" />
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
  </Sequence>
</Activity>