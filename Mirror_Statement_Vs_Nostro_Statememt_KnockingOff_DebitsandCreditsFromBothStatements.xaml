<Activity mc:Ignorable="sap sap2010" x:Class="Nostro_Statement_values_Vs_Mirror_Statement_Values" this:Nostro_Statement_values_Vs_Mirror_Statement_Values.In_Citrix_FilePath="C:\Users\RPA\Desktop\TestFolder\CITIBANK PROFITS STATEMENT 27 OCT 2022.xlsx" this:Nostro_Statement_values_Vs_Mirror_Statement_Values.In_Nostro_Statement_FilePath="C:\Users\RPA\Desktop\TestFolder\SWIFT MT940 CITIBANK  NEWYORK STATEMENT DATED 27 OCT 2022.xlsx" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ueabf="clr-namespace:UiPath.Excel.Activities.Business.Filter;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="In_Citrix_FilePath" Type="InArgument(x:String)" />
    <x:Property Name="In_Nostro_Statement_FilePath" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1177,5167</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Nostro_Statement_values_Vs_Mirror_Statement_Values_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="106">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.CV</x:String>
      <x:String>UiPath.Shared.ObjectLibrary</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.CV.Activities</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.CV.Activities.Interfaces</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>UiPath.UIAutomationNext.Models.ExtractData</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Excel.Activities.Business.Filter</x:String>
      <x:String>System.Globalization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="62">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.CV.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="1187,5102" sap2010:WorkflowViewState.IdRef="Sequence_52">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="OutDTBL" />
      <Variable x:TypeArguments="x:String" Name="dtbl" />
      <Variable x:TypeArguments="sd:DataTable" Default="[New System.Data.DataTable]" Name="ExtractDataTable" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="1125,4980" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_3">
      <ueab:ExcelProcessScopeX.Body>
        <ActivityAction x:TypeArguments="ui:IExcelProcess">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
          </ActivityAction.Argument>
          <Sequence sap:VirtualizedContainerService.HintSize="1091,4884" sap2010:WorkflowViewState.IdRef="Sequence_55">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1029,4762" sap2010:WorkflowViewState.IdRef="Sequence_51">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="967,4640" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_3" ResizeWindow="None" TemplatePath="C:\Users\RPA\Desktop\TestFolder\SWIFT MT940 CITIBANK  NEWYORK STATEMENT DATED 27 OCT 2022.xlsx" UseTemplate="True" WorkbookPath="[In_Nostro_Statement_FilePath]">
                <ueab:ExcelApplicationCard.Body>
                  <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="933,4339" sap2010:WorkflowViewState.IdRef="Sequence_53">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="Table" />
                        <Variable x:TypeArguments="ue:IReadWriteRangeRef" Name="TableDest" />
                        <Variable x:TypeArguments="x:String" Name="dataTbl" />
                        <Variable x:TypeArguments="x:Int32" Name="TotlaRows" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ueab:FilterX ClearFilter="False" ColumnName="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;A1&quot;)]" DisplayName="Filter" HasHeaders="True" sap:VirtualizedContainerService.HintSize="871,178" sap2010:WorkflowViewState.IdRef="FilterX_1" Range="[Excel.Sheet(&quot;Sheet1&quot;)]">
                        <ueab:FilterX.FilterArgument>
                          <ueabf:FilterArgument Mode="Basic">
                            <ueabf:FilterArgument.AdvancedFiltersArgument>
                              <ueabf:AdvancedFilterArgument LogicalOperator="And">
                                <ueabf:AdvancedFilterArgument.Condition1>
                                  <ueabf:AdvancedFilterCondition Value="{x:Null}" Operator="NONE" />
                                </ueabf:AdvancedFilterArgument.Condition1>
                                <ueabf:AdvancedFilterArgument.Condition2>
                                  <ueabf:AdvancedFilterCondition Value="{x:Null}" Operator="NONE" />
                                </ueabf:AdvancedFilterArgument.Condition2>
                              </ueabf:AdvancedFilterArgument>
                            </ueabf:FilterArgument.AdvancedFiltersArgument>
                            <ueabf:FilterArgument.BasicFiltersArgument>
                              <ueabf:BasicFilterArgument>
                                <ueabf:BasicFilterArgument.BasicFilters>
                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="1">
                                    <InArgument x:TypeArguments="x:String" xml:space="preserve">           DebitCreditMark: Debit/Credit Mark:          D                       </InArgument>
                                  </scg:List>
                                </ueabf:BasicFilterArgument.BasicFilters>
                              </ueabf:BasicFilterArgument>
                            </ueabf:FilterArgument.BasicFiltersArgument>
                          </ueabf:FilterArgument>
                        </ueab:FilterX.FilterArgument>
                      </ueab:FilterX>
                      <Assign sap:VirtualizedContainerService.HintSize="871,70" sap2010:WorkflowViewState.IdRef="Assign_1">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[TotlaRows]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[Excel.Sheet("Sheet1").RowCount]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:InterruptibleWhile CurrentIndex="{x:Null}" Condition="[TotlaRows &gt; 0]" DisplayName="While" sap:VirtualizedContainerService.HintSize="871,3453" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
                        <ui:InterruptibleWhile.Body>
                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="835,3278" sap2010:WorkflowViewState.IdRef="Sequence_58">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="CellADR" />
                              <Variable x:TypeArguments="x:Int32" Name="RowNumber" />
                              <Variable x:TypeArguments="x:String" Name="strAmount" />
                              <Variable x:TypeArguments="x:String" Name="strRef1" />
                              <Variable x:TypeArguments="x:String" Name="hash" />
                              <Variable x:TypeArguments="x:String" Name="Flag" />
                              <Variable x:TypeArguments="x:String" Name="strRef2" />
                              <Variable x:TypeArguments="x:String" Name="TransStart" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ueab:FindReplaceValueX ReplaceWith="{x:Null}" DisplayName="Find/Replace Value" FoundAt="[CellADR]" sap:VirtualizedContainerService.HintSize="773,243" sap2010:WorkflowViewState.IdRef="FindReplaceValueX_1" LookIn="Values" Operation="Find" ValueToFind="[&quot;           DebitCreditMark: Debit/Credit Mark:          D                       &quot;]" WhereToSearch="[Excel.Sheet(&quot;Sheet1&quot;)]" />
                            <If Condition="[CellADR.IsNumeric() = true OR string.IsNullOrEmpty(CellADR) = false]" sap:VirtualizedContainerService.HintSize="773,619" sap2010:WorkflowViewState.IdRef="If_5">
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="400,302" sap2010:WorkflowViewState.IdRef="Sequence_71">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_3">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[CellADR]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(CellADR,"[0-9]+(.[0-9]+)").ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_24">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int32">[RowNumber]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int32">[CInt(CellADR)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="400,154" sap2010:WorkflowViewState.IdRef="Sequence_72">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:Break sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Break_1" />
                                </Sequence>
                              </If.Else>
                            </If>
                            <Sequence DisplayName="Getting Amount and Reference Values" sap:VirtualizedContainerService.HintSize="773,90" sap2010:WorkflowViewState.IdRef="Sequence_59">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:Int32" Name="intAmount" />
                                <Variable x:TypeArguments="x:Double" Name="Double_Amount" />
                                <Variable x:TypeArguments="x:String" Name="variable1" />
                                <Variable x:TypeArguments="x:String" Name="variable2" />
                                <Variable x:TypeArguments="x:String" Name="_Decimal" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;A&quot;+(RowNumber+2).ToString)]" DisplayName="Read Cell Value" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="482,168" sap2010:WorkflowViewState.IdRef="ReadCellValueX_1">
                                <ueab:ReadCellValueX.SaveTo>
                                  <OutArgument x:TypeArguments="x:String">[strAmount]</OutArgument>
                                </ueab:ReadCellValueX.SaveTo>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ueab:ReadCellValueX>
                              <Assign sap:VirtualizedContainerService.HintSize="482,70" sap2010:WorkflowViewState.IdRef="Assign_4">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strAmount]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[strAmount.split(":").Last]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="482,70" sap2010:WorkflowViewState.IdRef="Assign_7">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strAmount]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[strAmount.Replace(" ","")]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="482,70" sap2010:WorkflowViewState.IdRef="Assign_8">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strAmount]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(strAmount,"\n\r\t","")]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="482,70" sap2010:WorkflowViewState.IdRef="Assign_6">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strAmount]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[strAmount.Substring(0,(strAmount.IndexOf("#")))]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="482,70" sap2010:WorkflowViewState.IdRef="Assign_13">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strAmount]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[strAmount.Replace(",",".")]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="482,70" sap2010:WorkflowViewState.IdRef="Assign_27">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[_Decimal]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[strAmount.Substring((strAmount.IndexOf(".")),3)]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="482,70" sap2010:WorkflowViewState.IdRef="Assign_28">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[intAmount]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[CInt(strAmount)]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="482,70" sap2010:WorkflowViewState.IdRef="Assign_29">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strAmount]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[(Convert.ToDecimal(strAmount).ToString("#,###"))+_Decimal]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="482,94" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[strAmount]" />
                              <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;A&quot;+(RowNumber+5).ToString)]" DisplayName="Read Cell Value" GetFormattedText="False" sap:VirtualizedContainerService.HintSize="482,168" sap2010:WorkflowViewState.IdRef="ReadCellValueX_2">
                                <ueab:ReadCellValueX.SaveTo>
                                  <OutArgument x:TypeArguments="x:String">[strRef1]</OutArgument>
                                </ueab:ReadCellValueX.SaveTo>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ueab:ReadCellValueX>
                              <Assign sap:VirtualizedContainerService.HintSize="482,70" sap2010:WorkflowViewState.IdRef="Assign_9">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strRef1]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[strRef1.split(":").Last]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="482,70" sap2010:WorkflowViewState.IdRef="Assign_11">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strRef1]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[strRef1.Replace(" ","")]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="482,70" sap2010:WorkflowViewState.IdRef="Assign_12">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strRef1]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(strRef1,"\n\r\t","")]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;A&quot;+(RowNumber+10).ToString)]" DisplayName="Read Cell Value" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="482,168" sap2010:WorkflowViewState.IdRef="ReadCellValueX_4">
                                <ueab:ReadCellValueX.SaveTo>
                                  <OutArgument x:TypeArguments="x:String">[strRef2]</OutArgument>
                                </ueab:ReadCellValueX.SaveTo>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ueab:ReadCellValueX>
                              <Assign sap:VirtualizedContainerService.HintSize="482,70" sap2010:WorkflowViewState.IdRef="Assign_21">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strRef2]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[strRef2.Replace(" ","")]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="482,70" sap2010:WorkflowViewState.IdRef="Assign_22">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strRef2]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(strRef2,"\n\r\t","")]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="482,70" sap2010:WorkflowViewState.IdRef="Assign_23">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strRef2]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[strRef2.Remove(0,(strRef2.IndexOF("O")+1))]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <If Condition="[strRef1.Length &gt;= 5]" sap:VirtualizedContainerService.HintSize="482,468" sap2010:WorkflowViewState.IdRef="If_3">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="400,192" sap2010:WorkflowViewState.IdRef="Sequence_64">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_15">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strRef1]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[strRef1.Substring(0,5)]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap:VirtualizedContainerService.HintSize="400,113" sap2010:WorkflowViewState.IdRef="Sequence_65">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Iterating_Mirror_Statement_Knocking_Off_Corresponding_Credits.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="773,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Iterating_Mirror_Statement_Knocking_Off_Corresponding_Credits.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="In_CITRIX_File">
                                  <VisualBasicValue x:TypeArguments="x:String" ExpressionText="In_Citrix_FilePath" />
                                </InArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_Flag" />
                                <InArgument x:TypeArguments="x:String" x:Key="In_Amount">
                                  <VisualBasicValue x:TypeArguments="x:String" ExpressionText="strAmount" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="In_Ref">
                                  <VisualBasicValue x:TypeArguments="x:String" ExpressionText="strRef1" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="In_Ref1">
                                  <VisualBasicValue x:TypeArguments="x:String" ExpressionText="strRef2" />
                                </InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeWorkflowFile>
                            <ui:IfElseIf DisplayName="Else If" sap:VirtualizedContainerService.HintSize="773,1604" sap2010:WorkflowViewState.IdRef="IfElseIf_1">
                              <ui:IfElseIf.ConditionBlocks>
                                <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                                  <ui:IfElseIfBlock BlockType="If" Condition="[Flag = &quot;True&quot;]">
                                    <ui:IfElseIfBlock.Then>
                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="496,477" sap2010:WorkflowViewState.IdRef="Sequence_73">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ueab:FillRangeX DestinationRange="[Excel.Sheet(&quot;Sheet1&quot;).Range(&quot;B&quot;+(RowNumber-3).ToString+&quot;:B&quot;+(RowNumber+16).ToString)]" DisplayName="Fill Range" sap:VirtualizedContainerService.HintSize="434,147" sap2010:WorkflowViewState.IdRef="FillRangeX_2" Value="[&quot;Delete_row&quot;]" />
                                        <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;B&quot;+(RowNumber-3).ToString)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,168" sap2010:WorkflowViewState.IdRef="WriteCellX_3" Value="[&quot;Delete_row&quot;]" />
                                      </Sequence>
                                    </ui:IfElseIfBlock.Then>
                                  </ui:IfElseIfBlock>
                                  <ui:IfElseIfBlock BlockType="ElseIf" Condition="[Flag = &quot;NotSure&quot;]">
                                    <ui:IfElseIfBlock.Then>
                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="496,290" sap2010:WorkflowViewState.IdRef="Sequence_74">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;B&quot;+(RowNumber-3).ToString)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,168" sap2010:WorkflowViewState.IdRef="WriteCellX_4" Value="[&quot;Conflicting_Reference&quot;]" />
                                      </Sequence>
                                    </ui:IfElseIfBlock.Then>
                                  </ui:IfElseIfBlock>
                                  <ui:IfElseIfBlock BlockType="Else">
                                    <ui:IfElseIfBlock.Then>
                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="496,472" sap2010:WorkflowViewState.IdRef="Sequence_75">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;A&quot;+CellADR)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,168" sap2010:WorkflowViewState.IdRef="WriteCellX_5" Value="[&quot;           DebitCreditMark: Debit/Credit Mark:          D&quot;]">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ueab:WriteCellX>
                                        <Assign sap:VirtualizedContainerService.HintSize="434,70" sap2010:WorkflowViewState.IdRef="Assign_30">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Int32">[TotlaRows]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Int32">[TotlaRows-1]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <ui:Continue sap:VirtualizedContainerService.HintSize="434,32" sap2010:WorkflowViewState.IdRef="Continue_2" />
                                      </Sequence>
                                    </ui:IfElseIfBlock.Then>
                                  </ui:IfElseIfBlock>
                                </sc:BindingList>
                              </ui:IfElseIf.ConditionBlocks>
                            </ui:IfElseIf>
                            <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;A&quot;+CellADR)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="773,168" sap2010:WorkflowViewState.IdRef="WriteCellX_1" Value="[&quot;           DebitCreditMark: Debit/Credit Mark:          D&quot;]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ueab:WriteCellX>
                            <Assign sap:VirtualizedContainerService.HintSize="773,70" sap2010:WorkflowViewState.IdRef="Assign_2">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[TotlaRows]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[TotlaRows-1]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </ui:InterruptibleWhile.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InterruptibleWhile>
                      <ueab:FilterX ClearFilter="True" ColumnName="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;A1&quot;)]" DisplayName="Filter" HasHeaders="True" sap:VirtualizedContainerService.HintSize="871,178" sap2010:WorkflowViewState.IdRef="FilterX_2" Range="[Excel.Sheet(&quot;Sheet1&quot;)]">
                        <ueab:FilterX.FilterArgument>
                          <ueabf:FilterArgument Mode="Basic">
                            <ueabf:FilterArgument.AdvancedFiltersArgument>
                              <ueabf:AdvancedFilterArgument LogicalOperator="And">
                                <ueabf:AdvancedFilterArgument.Condition1>
                                  <ueabf:AdvancedFilterCondition Value="{x:Null}" Operator="NONE" />
                                </ueabf:AdvancedFilterArgument.Condition1>
                                <ueabf:AdvancedFilterArgument.Condition2>
                                  <ueabf:AdvancedFilterCondition Value="{x:Null}" Operator="NONE" />
                                </ueabf:AdvancedFilterArgument.Condition2>
                              </ueabf:AdvancedFilterArgument>
                            </ueabf:FilterArgument.AdvancedFiltersArgument>
                            <ueabf:FilterArgument.BasicFiltersArgument>
                              <ueabf:BasicFilterArgument>
                                <ueabf:BasicFilterArgument.BasicFilters>
                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="1">
                                    <InArgument x:TypeArguments="x:String" xml:space="preserve">           DebitCreditMark: Debit/Credit Mark:          D                       </InArgument>
                                  </scg:List>
                                </ueabf:BasicFilterArgument.BasicFilters>
                              </ueabf:BasicFilterArgument>
                            </ueabf:FilterArgument.BasicFiltersArgument>
                          </ueabf:FilterArgument>
                        </ueab:FilterX.FilterArgument>
                      </ueab:FilterX>
                      <ueab:FilterX ClearFilter="False" ColumnName="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;B1&quot;)]" DisplayName="Filter" HasHeaders="True" sap:VirtualizedContainerService.HintSize="871,178" sap2010:WorkflowViewState.IdRef="FilterX_3" Range="[Excel.Sheet(&quot;Sheet1&quot;)]">
                        <ueab:FilterX.FilterArgument>
                          <ueabf:FilterArgument Mode="Basic">
                            <ueabf:FilterArgument.AdvancedFiltersArgument>
                              <ueabf:AdvancedFilterArgument LogicalOperator="And">
                                <ueabf:AdvancedFilterArgument.Condition1>
                                  <ueabf:AdvancedFilterCondition Value="{x:Null}" Operator="NONE" />
                                </ueabf:AdvancedFilterArgument.Condition1>
                                <ueabf:AdvancedFilterArgument.Condition2>
                                  <ueabf:AdvancedFilterCondition Value="{x:Null}" Operator="NONE" />
                                </ueabf:AdvancedFilterArgument.Condition2>
                              </ueabf:AdvancedFilterArgument>
                            </ueabf:FilterArgument.AdvancedFiltersArgument>
                            <ueabf:FilterArgument.BasicFiltersArgument>
                              <ueabf:BasicFilterArgument>
                                <ueabf:BasicFilterArgument.BasicFilters>
                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="1">
                                    <InArgument x:TypeArguments="x:String">Delete row</InArgument>
                                  </scg:List>
                                </ueabf:BasicFilterArgument.BasicFilters>
                              </ueabf:BasicFilterArgument>
                            </ueabf:FilterArgument.BasicFiltersArgument>
                          </ueabf:FilterArgument>
                        </ueab:FilterX.FilterArgument>
                      </ueab:FilterX>
                    </Sequence>
                  </ActivityAction>
                </ueab:ExcelApplicationCard.Body>
              </ueab:ExcelApplicationCard>
            </Sequence>
          </Sequence>
        </ActivityAction>
      </ueab:ExcelProcessScopeX.Body>
    </ueab:ExcelProcessScopeX>
  </Sequence>
</Activity>