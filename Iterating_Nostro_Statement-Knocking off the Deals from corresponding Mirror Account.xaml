<Activity mc:Ignorable="sap sap2010" x:Class="Iterating_Nostro_Statement" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="In_ExcelFile" Type="InArgument(x:String)" />
    <x:Property Name="In_CITIRIX_FilePath" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1536,4897</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Iterating_Nostro_Statement_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="64">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Excel.Activities.Business.Filter</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="51">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Iterating_Nostro_Statement" sap:VirtualizedContainerService.HintSize="1546,4832" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="ui:GenericValue" Name="Row_Value" />
      <Variable x:TypeArguments="x:String" Name="Key" />
      <Variable x:TypeArguments="x:String" Name="Value" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="1484,4721" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1">
      <ueab:ExcelProcessScopeX.Body>
        <ActivityAction x:TypeArguments="ui:IExcelProcess">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1450,4634" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="1388,4523" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" TemplatePath="\\10.222.140.144\d\d\MIS\GLS\RPA_BOT\SWIFT MT940 CITIBANK  NEWYORK STATEMENT DATED 27 OCT 2022.xlsx" UseTemplate="True" WorkbookPath="[In_ExcelFile]">
              <ueab:ExcelApplicationCard.Body>
                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1354,4231" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ueab:ExcelForEachRowX DisplayName="For Each Excel Row" EmptyRowBehavior="Skip" HasHeaders="False" sap:VirtualizedContainerService.HintSize="1292,4120" sap2010:WorkflowViewState.IdRef="ExcelForEachRowX_1" Range="[Excel.Sheet(&quot;Sheet1&quot;)]" SaveAfterEachRow="False">
                      <ueab:ExcelForEachRowX.Body>
                        <ActivityAction x:TypeArguments="ue:CurrentRowQuickHandle, x:Int32">
                          <ActivityAction.Argument1>
                            <DelegateInArgument x:TypeArguments="ue:CurrentRowQuickHandle" Name="CurrentRow" />
                          </ActivityAction.Argument1>
                          <ActivityAction.Argument2>
                            <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                          </ActivityAction.Argument2>
                          <Sequence DisplayName="Outer Sequence" sap:VirtualizedContainerService.HintSize="1258,3938" sap2010:WorkflowViewState.IdRef="Sequence_6">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1196,3827" sap2010:WorkflowViewState.IdRef="Sequence_4">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ExcelReadCell Cell="[&quot;A&quot;+CurrentIndex.ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="1134,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_1" SheetName="Sheet1">
                                <ui:ExcelReadCell.Result>
                                  <OutArgument x:TypeArguments="ui:GenericValue">[Row_Value]</OutArgument>
                                </ui:ExcelReadCell.Result>
                              </ui:ExcelReadCell>
                              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="1134,90" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[Row_Value]" />
                              <If Condition="[IsNothing(Row_Value)]" DisplayName="If an Row/Cell is not Empty" sap:VirtualizedContainerService.HintSize="1134,3486" sap2010:WorkflowViewState.IdRef="If_1">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="400,136" sap2010:WorkflowViewState.IdRef="Sequence_7">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:Continue sap:VirtualizedContainerService.HintSize="338,25" sap2010:WorkflowViewState.IdRef="Continue_1" />
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence DisplayName="Sequence (Found a  F61:)" sap:VirtualizedContainerService.HintSize="1056,3174" sap2010:WorkflowViewState.IdRef="Sequence_8">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="994,61" sap2010:WorkflowViewState.IdRef="Assign_1">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[Key]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[Row_Value.Split(":").First]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="994,61" sap2010:WorkflowViewState.IdRef="Assign_2">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[Value]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[Row_Value.Split(":").Last]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <If sap2010:Annotation.AnnotationText="Transactions start from F61: so the Bot checks for the begining of an individual transaction" Condition="[Key.Trim.Contains(&quot;F61&quot;)]" DisplayName="If value of cell/Row is F61:" sap:VirtualizedContainerService.HintSize="994,2861" sap2010:WorkflowViewState.IdRef="If_2">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="916,2518" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelReadCell Cell="[&quot;A&quot;+(CurrentIndex+3).ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="854,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_2" SheetName="Sheet1">
                                            <ui:ExcelReadCell.Result>
                                              <OutArgument x:TypeArguments="ui:GenericValue">[Row_Value]</OutArgument>
                                            </ui:ExcelReadCell.Result>
                                          </ui:ExcelReadCell>
                                          <Assign sap:VirtualizedContainerService.HintSize="854,61" sap2010:WorkflowViewState.IdRef="Assign_3">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[Value]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[Row_Value.Split(":").Last]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <If Condition="[Value.trim.Equals(&quot;C&quot;)]" DisplayName="If Debit/Credit Value = C" sap:VirtualizedContainerService.HintSize="854,2206" sap2010:WorkflowViewState.IdRef="If_3">
                                            <If.Then>
                                              <Sequence DisplayName="Sequence (Get the Value Date, the Amount and the Reference from the transancation" sap:VirtualizedContainerService.HintSize="776,1894" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                                <Sequence.Variables>
                                                  <Variable x:TypeArguments="x:String" Name="strDate" />
                                                  <Variable x:TypeArguments="x:String" Name="strAmount" />
                                                  <Variable x:TypeArguments="x:String" Name="strRef" />
                                                  <Variable x:TypeArguments="x:Int32" Name="hash" />
                                                  <Variable x:TypeArguments="x:Boolean" Name="Flag" />
                                                </Sequence.Variables>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:ExcelReadCell Cell="[&quot;A&quot;+(CurrentIndex+9).ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="714,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_5" SheetName="Sheet1">
                                                  <ui:ExcelReadCell.Result>
                                                    <OutArgument x:TypeArguments="ui:GenericValue">[Row_Value]</OutArgument>
                                                  </ui:ExcelReadCell.Result>
                                                </ui:ExcelReadCell>
                                                <Assign sap:VirtualizedContainerService.HintSize="714,61" sap2010:WorkflowViewState.IdRef="Assign_6">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[strRef]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[Row_Value.Split(":").Last]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign sap:VirtualizedContainerService.HintSize="714,61" sap2010:WorkflowViewState.IdRef="Assign_15">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[strRef]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[strRef.Replace("/","")]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <If Condition="[strRef.Contains(&quot;FX&quot;)]" sap:VirtualizedContainerService.HintSize="714,1481" sap2010:WorkflowViewState.IdRef="If_5">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <If.Then>
                                                    <Sequence sap:VirtualizedContainerService.HintSize="636,1169" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <Sequence DisplayName="Read the other fields (The Value date and Amount from the satement)" sap:VirtualizedContainerService.HintSize="574,81" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <ui:ExcelReadCell Cell="[&quot;A&quot;+(CurrentIndex+1).ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="396,69" sap2010:WorkflowViewState.IdRef="ExcelReadCell_3" SheetName="Sheet1">
                                                          <ui:ExcelReadCell.Result>
                                                            <OutArgument x:TypeArguments="ui:GenericValue">[Row_Value]</OutArgument>
                                                          </ui:ExcelReadCell.Result>
                                                        </ui:ExcelReadCell>
                                                        <Assign sap:VirtualizedContainerService.HintSize="396,70" sap2010:WorkflowViewState.IdRef="Assign_4">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[strDate]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">[Row_Value.Split(":").Last]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <ui:ExcelReadCell Cell="[&quot;A&quot;+(CurrentIndex+5).ToString]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="396,69" sap2010:WorkflowViewState.IdRef="ExcelReadCell_4" SheetName="Sheet1">
                                                          <ui:ExcelReadCell.Result>
                                                            <OutArgument x:TypeArguments="ui:GenericValue">[Row_Value]</OutArgument>
                                                          </ui:ExcelReadCell.Result>
                                                        </ui:ExcelReadCell>
                                                        <Assign sap:VirtualizedContainerService.HintSize="396,70" sap2010:WorkflowViewState.IdRef="Assign_5">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[strAmount]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">[Row_Value.Split(":").Last]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign sap:VirtualizedContainerService.HintSize="396,70" sap2010:WorkflowViewState.IdRef="Assign_7">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[strDate]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">[strDate.Trim.Substring(0,6)]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign sap:VirtualizedContainerService.HintSize="396,70" sap2010:WorkflowViewState.IdRef="Assign_9">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[strAmount]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">[strAmount.Trim]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign sap:VirtualizedContainerService.HintSize="396,70" sap2010:WorkflowViewState.IdRef="Assign_8">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:Int32">[hash]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:Int32">[strAmount.IndexOf("#")]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign sap:VirtualizedContainerService.HintSize="396,70" sap2010:WorkflowViewState.IdRef="Assign_11">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[strAmount]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">[strAmount.Substring(0,hash)]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign sap:VirtualizedContainerService.HintSize="396,70" sap2010:WorkflowViewState.IdRef="Assign_14">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[strAmount]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">[strAmount.Replace(",",".")]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign sap:VirtualizedContainerService.HintSize="396,70" sap2010:WorkflowViewState.IdRef="Assign_10">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[strRef]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">[strRef.Trim]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                      </Sequence>
                                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Mirror_Statement_values_Vs_Nostro_Statement_Values.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="574,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Mirror_Statement_values_Vs_Nostro_Statement_Values.xaml">
                                                        <ui:InvokeWorkflowFile.Arguments>
                                                          <InArgument x:TypeArguments="x:String" x:Key="In_Date">
                                                            <VisualBasicValue x:TypeArguments="x:String" ExpressionText="strDate" />
                                                          </InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="In_Amount">
                                                            <VisualBasicValue x:TypeArguments="x:String" ExpressionText="strAmount" />
                                                          </InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="In_Ref">
                                                            <VisualBasicValue x:TypeArguments="x:String" ExpressionText="strRef" />
                                                          </InArgument>
                                                          <OutArgument x:TypeArguments="x:Boolean" x:Key="out_Flag">
                                                            <VisualBasicReference x:TypeArguments="x:Boolean" ExpressionText="Flag" />
                                                          </OutArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="In_CITRIX_File">
                                                            <VisualBasicValue x:TypeArguments="x:String" ExpressionText="In_CITIRIX_FilePath" />
                                                          </InArgument>
                                                        </ui:InvokeWorkflowFile.Arguments>
                                                      </ui:InvokeWorkflowFile>
                                                      <If Condition="[Flag = true]" DisplayName="If (A match is found in the Mirror Statement)" sap:VirtualizedContainerService.HintSize="574,784" sap2010:WorkflowViewState.IdRef="If_4">
                                                        <If.Then>
                                                          <Sequence DisplayName="Sequence (Knock off the transation from the Nostro Statement)" sap:VirtualizedContainerService.HintSize="496,472" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                                            <Sequence.Variables>
                                                              <Variable x:TypeArguments="x:String" Name="TransStart" />
                                                              <Variable x:TypeArguments="x:String" Name="TransEnd" />
                                                            </Sequence.Variables>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <Assign sap:VirtualizedContainerService.HintSize="434,61" sap2010:WorkflowViewState.IdRef="Assign_12">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="x:String">[TransStart]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="x:String">[CurrentIndex.ToString]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <Assign sap:VirtualizedContainerService.HintSize="434,61" sap2010:WorkflowViewState.IdRef="Assign_13">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="x:String">[TransEnd]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="x:String">[(CurrentIndex+9).ToString]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;B&quot;+TransStart)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,159" sap2010:WorkflowViewState.IdRef="WriteCellX_1" Value="[&quot;Delete_row&quot;]" />
                                                          </Sequence>
                                                        </If.Then>
                                                        <If.Else>
                                                          <Sequence sap:VirtualizedContainerService.HintSize="400,136" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <ui:Continue sap:VirtualizedContainerService.HintSize="338,25" sap2010:WorkflowViewState.IdRef="Continue_4" />
                                                          </Sequence>
                                                        </If.Else>
                                                      </If>
                                                    </Sequence>
                                                  </If.Then>
                                                  <If.Else>
                                                    <Sequence sap:VirtualizedContainerService.HintSize="400,136" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ui:Continue sap:VirtualizedContainerService.HintSize="338,25" sap2010:WorkflowViewState.IdRef="Continue_5" />
                                                    </Sequence>
                                                  </If.Else>
                                                </If>
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence sap:VirtualizedContainerService.HintSize="400,136" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:Continue sap:VirtualizedContainerService.HintSize="338,25" sap2010:WorkflowViewState.IdRef="Continue_2" />
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap:VirtualizedContainerService.HintSize="400,136" sap2010:WorkflowViewState.IdRef="Sequence_10">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:Continue sap:VirtualizedContainerService.HintSize="338,25" sap2010:WorkflowViewState.IdRef="Continue_3" />
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                          </Sequence>
                        </ActivityAction>
                      </ueab:ExcelForEachRowX.Body>
                    </ueab:ExcelForEachRowX>
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelApplicationCard.Body>
            </ueab:ExcelApplicationCard>
          </Sequence>
        </ActivityAction>
      </ueab:ExcelProcessScopeX.Body>
    </ueab:ExcelProcessScopeX>
  </Sequence>
</Activity>