<Activity mc:Ignorable="sap sap2010" x:Class="Iterating_Mirror_Statement_Knocking_Off_Corresponding_Credits" this:Iterating_Mirror_Statement_Knocking_Off_Corresponding_Credits.In_CITRIX_File="C:\Users\RPA\Desktop\TestFolder\CITIBANK PROFITS STATEMENT 27 OCT 2022.xlsx" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uix="http://schemas.uipath.com/workflow/activities/uix" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="In_CITRIX_File" Type="InArgument(x:String)" />
    <x:Property Name="out_Flag" Type="OutArgument(x:String)" />
    <x:Property Name="In_Amount" Type="InArgument(x:String)" />
    <x:Property Name="In_Ref" Type="InArgument(x:String)" />
    <x:Property Name="In_Ref1" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1506,5815</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Iterating_Mirror_Statement_Knocking_Off_Corresponding_Credits_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="42">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.UIAutomationNext.Models.ExtractData</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="53">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Iterating_Mirror_Statement_Knocking_Off_Corresponding_Credits" sap:VirtualizedContainerService.HintSize="1516,5750" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="strAmount" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="1454,5639" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1">
      <ueab:ExcelProcessScopeX.Body>
        <ActivityAction x:TypeArguments="ui:IExcelProcess">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1420,5552" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="1358,5441" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" TemplatePath="C:\Users\RPA\Desktop\TestFolder\CITIBANK PROFITS STATEMENT 27 OCT 2022.xlsx" UseTemplate="True" WorkbookPath="[In_CITRIX_File]">
              <ueab:ExcelApplicationCard.Body>
                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1324,5149" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="FormattedAmount" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="1262,61" sap2010:WorkflowViewState.IdRef="Assign_13">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[FormattedAmount]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[CDbl(In_Amount).ToString("N2")]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <uix:NKeyboardShortcuts ActivateBefore="True" ClickBeforeMode="None" DisplayName="Keyboard Shortcuts" sap:VirtualizedContainerService.HintSize="1262,179" sap2010:WorkflowViewState.IdRef="NKeyboardShortcuts_1" InScope="[Excel]" ScopeIdentifier="Excel" Shortcuts="[d(hk)][d(ctrl)]f[u(ctrl)][u(hk)]" Version="V3" />
                    <uix:NTypeInto ActivateBefore="True" ClickBeforeMode="Single" DelayBefore="0" DisplayName="Type Into 'pane 18'" EmptyFieldMode="SingleLine" sap:VirtualizedContainerService.HintSize="1262,218" sap2010:WorkflowViewState.IdRef="NTypeInto_1" InScope="[Excel]" ScopeIdentifier="Excel" Text="[FormattedAmount]" Version="V3">
                      <uix:NTypeInto.Target>
                        <uix:TargetAnchorable DesignTimeRectangle="105, 72, 311, 14" DesignTimeScaleFactor="1" FriendlyName="'pane 18'" FullSelectorArgument="&lt;uia automationid='18' cls='EDTBX' /&gt;" FuzzySelectorArgument="&lt;uia automationid='18' cls='EDTBX' role='pane' /&gt;" Guid="af2d84b4-dbe2-47c0-b379-3840d55a2130" ImageBase64="iVBORw0KGgoAAAANSUhEUgAAATsAAAASCAYAAAAkCHmNAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABjSURBVHhe7dQBDQAhEMCw9+/lRKEEwstgbTIL+zbAw2bmz+yAp93RrbXMDnib2QEJZgckmB2QYHZAgtkBCWYHJJgdkGB2QILZAQlmBySYHZBgdkCC2QEJZgckmB2QcGc3M/sAkicruTQE9xEAAAAASUVORK5CYII=" InformativeScreenshot="85aebb2a180f391760a8af0f30b935ab.png" ScopeSelectorArgument="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Find and Replace' /&gt;" SearchSteps="Selector, FuzzySelector, Image" Version="V1" Visibility="Interactive">
                          <uix:TargetAnchorable.Anchors>
                            <scg:List x:TypeArguments="uix:ITarget" Capacity="1">
                              <uix:Target DesignTimeRectangle="354, 121, 80, 24" ElementType="Button" FriendlyName="'Options &gt;&gt;'" FullSelectorArgument="&lt;uia name='Options &amp;gt;&amp;gt;' role='button' /&gt;" FuzzySelectorArgument="&lt;uia name='Options &amp;gt;&amp;gt;' role='button' automationid='' check:fulltext='Options &amp;gt;&amp;gt;' /&gt;" ImageBase64="iVBORw0KGgoAAAANSUhEUgAAAFQAAAAcCAYAAAD/YJjAAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAFsSURBVGhD7ZTRkYQgDEDtiW5ohlZowCIoxUpyshENGOBYsnfjXTLzPjDAwDNhAQ3RUKHCoUKFIxO6rqvyBjRuQrdtUwZQocKoUGFUqDAqVBgVKoyMUG9hWZYT4wI/74YHuxhwgY4t+Nu85zAtNDizS6QSAjizi7U+m8dTCn0+k0KjPEZIcGBOyYc0d1Wx9el7WdVcxaY55fd8T9oV+JPjd77aY77VRb18izmhmTgKVmkmLlXs63koZJeijrG3RFRcZxyEc15rT14kJUnHM47na3xQaBLTkvaJ3MiTgz+tVsnfyZfMCb1d7IBr+WEx7+YQrLCWiLimJb6X55kUyh0cK+R6g/Bgafyan7VuXUy75dtCq+/7Tk92/2fUmRYawQPE1kDyBx0va22ak18SWyqt4USlfVsC6ZisGawuCUSEtikv/7f5VaFYeRdl/on8gND/hQoVRoUKo0KF6QpVxqGRCdWYDxUqHCpUNAC+AFxqkk4EYnrRAAAAAElFTkSuQmCC" SearchSteps="Selector, FuzzySelector, Image" />
                            </scg:List>
                          </uix:TargetAnchorable.Anchors>
                        </uix:TargetAnchorable>
                      </uix:NTypeInto.Target>
                    </uix:NTypeInto>
                    <uix:NKeyboardShortcuts ActivateBefore="False" ClickBeforeMode="None" DelayAfter="0" DelayBefore="0" DelayBetweenKeys="0" DelayBetweenShortcuts="0.2" DisplayName="Keyboard Shortcuts" sap:VirtualizedContainerService.HintSize="1262,179" sap2010:WorkflowViewState.IdRef="NKeyboardShortcuts_2" InScope="[Excel]" InteractionMode="WindowMessages" ScopeIdentifier="Excel" Shortcuts="[d(hk)][k(tab)][u(hk)][d(hk)][k(tab)][u(hk)][d(hk)][k(enter)][u(hk)]" Version="V3" />
                    <uix:NCheckState DisplayName="Check App State 'Sheet'" sap:VirtualizedContainerService.HintSize="1262,4241" sap2010:WorkflowViewState.IdRef="NCheckState_1" InScope="[Excel]" ScopeIdentifier="Excel" Timeout="0.2" Version="V3">
                      <uix:NCheckState.IfExists>
                        <Sequence DisplayName="Target appears" sap:VirtualizedContainerService.HintSize="808,4024" sap2010:WorkflowViewState.IdRef="Sequence_4">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="sd:DataTable" Default="[New System.Data.DataTable]" Name="ExtractDataTable" />
                            <Variable x:TypeArguments="x:String" Name="CellADR" />
                            <Variable x:TypeArguments="x:Int32" Name="rowADR" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <uix:NExtractData AppendResults="False" ContinueOnError="True" DataTable="[ExtractDataTable]" DisplayName="Extract Table Data" ExtractDataSettings="&lt;Table xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xmlns:xsd='http://www.w3.org/2001/XMLSchema' Type='Table'&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' Name='Book' ReferenceName='Book' ReferenceIdx='0'&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' Name='Sheet' ReferenceName='Sheet' ReferenceIdx='1'&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' Name='Name' ReferenceName='Name' ReferenceIdx='2'&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' Name='Cell' ReferenceName='Cell' ReferenceIdx='3'&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' Name='Value' ReferenceName='Value' ReferenceIdx='4'&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' Name='Formula' ReferenceName='Formula' ReferenceIdx='5'&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&lt;/Table&gt;" ExtractMetadata="&lt;extract-table get_columns_name='1' get_empty_columns='1' columns_name_source='Longest' /&gt;" sap:VirtualizedContainerService.HintSize="746,157" sap2010:WorkflowViewState.IdRef="NExtractData_1" InScope="[Excel]" LimitExtractionTo="None" MaximumResults="0" ScopeIdentifier="Excel" Version="V3">
                            <uix:NExtractData.Target>
                              <uix:TargetAnchorable DesignTimeRectangle="8, 194, 441, 122" DesignTimeScaleFactor="1" ElementType="List" FriendlyName="'list'" FullSelectorArgument="&lt;uia cls='SysListView32' /&gt;" Guid="bb1b3569-028d-47be-923a-a6d088778a7f" InformativeScreenshot="ca4394ef851e33fc77e313add1fbcba9.png" ScopeSelectorArgument="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Find and Replace' /&gt;" SearchSteps="Selector" Version="V1" Visibility="Interactive" />
                            </uix:NExtractData.Target>
                          </uix:NExtractData>
                          <ui:CloseWindow TimeoutMS="{x:Null}" UseWindow="{x:Null}" DisplayName="Close Window 'excel.exe Find'" sap:VirtualizedContainerService.HintSize="746,107" sap2010:WorkflowViewState.IdRef="CloseWindow_1" InformativeScreenshot="9d2ce0a2205983b5c0b5a004dc0a13e2" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Find and Replace' /&gt;" WaitForReady="INTERACTIVE" />
                          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[ExtractDataTable]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="746,3565" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                            <ui:ForEachRow.Body>
                              <ActivityAction x:TypeArguments="sd:DataRow">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="712,3448" sap2010:WorkflowViewState.IdRef="Sequence_6">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="x:String" Name="strComments" />
                                    <Variable x:TypeArguments="x:String" Name="strComments1" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:GetRowItem Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="3" DisplayName="Get Row Item" sap:VirtualizedContainerService.HintSize="650,187" sap2010:WorkflowViewState.IdRef="GetRowItem_1" Row="[CurrentRow]">
                                    <ui:GetRowItem.Value>
                                      <OutArgument x:TypeArguments="x:String">[CellADR]</OutArgument>
                                    </ui:GetRowItem.Value>
                                  </ui:GetRowItem>
                                  <Assign sap:VirtualizedContainerService.HintSize="650,62" sap2010:WorkflowViewState.IdRef="Assign_1">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[CellADR]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(CellADR.ToString,"\D","")]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="650,62" sap2010:WorkflowViewState.IdRef="Assign_2">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int32">[rowADR]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int32">[CInt(CellADR)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <If Condition="[rowADR &lt; 25]" sap:VirtualizedContainerService.HintSize="650,415" sap2010:WorkflowViewState.IdRef="If_1">
                                    <If.Then>
                                      <Sequence sap:VirtualizedContainerService.HintSize="400,136" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:Continue sap:VirtualizedContainerService.HintSize="338,25" sap2010:WorkflowViewState.IdRef="Continue_2" />
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence sap:VirtualizedContainerService.HintSize="400,103" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                  <Sequence DisplayName="Read Comment from excel file" sap:VirtualizedContainerService.HintSize="650,81" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;Account Statement&quot;).Cell(&quot;L&quot;+rowADR.ToString)]" DisplayName="Read Cell Value" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="ReadCellValueX_1">
                                      <ueab:ReadCellValueX.SaveTo>
                                        <OutArgument x:TypeArguments="x:String">[strComments]</OutArgument>
                                      </ueab:ReadCellValueX.SaveTo>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ueab:ReadCellValueX>
                                    <Assign sap:VirtualizedContainerService.HintSize="338,62" sap2010:WorkflowViewState.IdRef="Assign_3">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strComments]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[strComments.Replace(" ","")]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="338,62" sap2010:WorkflowViewState.IdRef="Assign_7">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strComments1]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[strComments]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="338,62" sap2010:WorkflowViewState.IdRef="Assign_4">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strComments]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(strComments,"\r\t\n","")]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="338,62" sap2010:WorkflowViewState.IdRef="Assign_8">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strComments1]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(strComments1,"\r\t\n","")]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="338,62" sap2010:WorkflowViewState.IdRef="Assign_5">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strComments]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strComments,In_Ref ).ToString]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="338,62" sap2010:WorkflowViewState.IdRef="Assign_9">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strComments1]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strComments1,In_Ref1 ).ToString]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                  <Sequence DisplayName="Read Amount from excel file" sap:VirtualizedContainerService.HintSize="650,376" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;Account Statement&quot;).Cell(&quot;G&quot;+rowADR.ToString)]" DisplayName="Read Cell Value" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="444,159" sap2010:WorkflowViewState.IdRef="ReadCellValueX_2">
                                      <ueab:ReadCellValueX.SaveTo>
                                        <OutArgument x:TypeArguments="x:String">[strAmount]</OutArgument>
                                      </ueab:ReadCellValueX.SaveTo>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ueab:ReadCellValueX>
                                    <Assign sap:VirtualizedContainerService.HintSize="444,62" sap2010:WorkflowViewState.IdRef="Assign_12">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strAmount]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[strAmount.Replace(" ","")]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                  <ui:IfElseIf DisplayName="Else If" sap:VirtualizedContainerService.HintSize="650,1910" sap2010:WorkflowViewState.IdRef="IfElseIf_1">
                                    <ui:IfElseIf.ConditionBlocks>
                                      <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                                        <ui:IfElseIfBlock BlockType="If" Condition="[(strComments = In_Ref OR  strComments.Contains(In_Ref) = true) AND Decimal.Parse(strAmount) = Decimal.Parse(In_Amount)]">
                                          <ui:IfElseIfBlock.Then>
                                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="594,982" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="532,61" sap2010:WorkflowViewState.IdRef="Assign_10">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[out_Flag]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">True</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="532,328" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                                                <ui:CommentOut.Body>
                                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="496,249" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ueab:DeleteRowsX DeleteRowsOption="Specific" DisplayName="Delete Rows" HasHeaders="True" sap:VirtualizedContainerService.HintSize="434,138" sap2010:WorkflowViewState.IdRef="DeleteRowsX_2" Range="[Excel.Sheet(&quot;Account Statement&quot;)]" RowPositions="[rowADR.ToString]">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ueab:DeleteRowsX>
                                                  </Sequence>
                                                </ui:CommentOut.Body>
                                              </ui:CommentOut>
                                              <ueab:FormatRangeX DisplayName="Format Cells" sap:VirtualizedContainerService.HintSize="532,138" sap2010:WorkflowViewState.IdRef="FormatRangeX_1" Range="[Excel.Sheet(&quot;Account Statement&quot;).Range(&quot;A&quot;+rowADR.ToString+&quot;:Q&quot;+rowADR.ToString)]">
                                                <ueab:FormatRangeX.Alignment>
                                                  <ui:AlignmentOptions HorizontalAlignment="xlHAlignGeneral" VerticalAlignment="xlVAlignBottom" WrapText="False" />
                                                </ueab:FormatRangeX.Alignment>
                                                <ueab:FormatRangeX.Font>
                                                  <ui:FontOptions Color="Black" FillColor="SeaGreen" FontFamilyName="Calibri" Size="11" Style="Regular" />
                                                </ueab:FormatRangeX.Font>
                                                <ueab:FormatRangeX.Format>
                                                  <ueab:GeneralFormat />
                                                </ueab:FormatRangeX.Format>
                                              </ueab:FormatRangeX>
                                              <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Account Statement&quot;).Cell(&quot;R&quot;+rowADR.ToString)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="532,159" sap2010:WorkflowViewState.IdRef="WriteCellX_2" Value="[&quot;Reconciled with Corresponding Entry on SWIFT Statement&quot;]" />
                                              <ui:Break sap:VirtualizedContainerService.HintSize="532,25" sap2010:WorkflowViewState.IdRef="Break_3" />
                                            </Sequence>
                                          </ui:IfElseIfBlock.Then>
                                        </ui:IfElseIfBlock>
                                        <ui:IfElseIfBlock BlockType="ElseIf" Condition="[strComments.Contains(&quot;BOU&quot;) = true OR strComments.Contains(&quot;FX-00000561&quot;) = true OR strComments1 = In_Ref1]">
                                          <ui:IfElseIfBlock.Then>
                                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="496,436" sap2010:WorkflowViewState.IdRef="Sequence_10">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="434,61" sap2010:WorkflowViewState.IdRef="Assign_11">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[out_Flag]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">Not Certain</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Account Statement&quot;).Cell(&quot;R&quot;+rowADR.ToString)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,159" sap2010:WorkflowViewState.IdRef="WriteCellX_1" Value="[&quot;Confliticting_Ref&quot;]" />
                                              <ui:Break sap:VirtualizedContainerService.HintSize="434,25" sap2010:WorkflowViewState.IdRef="Break_4" />
                                            </Sequence>
                                          </ui:IfElseIfBlock.Then>
                                        </ui:IfElseIfBlock>
                                        <ui:IfElseIfBlock BlockType="Else">
                                          <ui:IfElseIfBlock.Then>
                                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,136" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:Continue sap:VirtualizedContainerService.HintSize="338,25" sap2010:WorkflowViewState.IdRef="Continue_1" />
                                            </Sequence>
                                          </ui:IfElseIfBlock.Then>
                                        </ui:IfElseIfBlock>
                                      </sc:BindingList>
                                    </ui:IfElseIf.ConditionBlocks>
                                  </ui:IfElseIf>
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEachRow.Body>
                          </ui:ForEachRow>
                        </Sequence>
                      </uix:NCheckState.IfExists>
                      <uix:NCheckState.IfNotExists>
                        <Sequence DisplayName="Target does not appear" sap:VirtualizedContainerService.HintSize="400,222" sap2010:WorkflowViewState.IdRef="Sequence_5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:CloseWindow TimeoutMS="{x:Null}" UseWindow="{x:Null}" DisplayName="Close Window 'excel.exe Find'" sap:VirtualizedContainerService.HintSize="338,107" sap2010:WorkflowViewState.IdRef="CloseWindow_2" InformativeScreenshot="9d2ce0a2205983b5c0b5a004dc0a13e2" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Find and Replace' /&gt;" WaitForReady="INTERACTIVE" />
                        </Sequence>
                      </uix:NCheckState.IfNotExists>
                      <uix:NCheckState.Target>
                        <uix:TargetAnchorable DesignTimeRectangle="10, 196, 255, 24" DesignTimeScaleFactor="1" FriendlyName="'Book'" FullSelectorArgument="&lt;uia cls='SysListView32' /&gt;&lt;uia automationid='HeaderItem 0' name='Book' role='header item' /&gt;" FuzzySelectorArgument="&lt;uia cls='SysListView32' /&gt;&lt;uia automationid='HeaderItem 0' name='Book' role='header item' check:fulltext='Book' /&gt;" Guid="a02c6e56-e3ab-452a-b0a5-384a1e371066" ImageBase64="iVBORw0KGgoAAAANSUhEUgAAAQMAAAAcCAYAAABlJtoxAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAEXSURBVHhe7dhBbsIwEAVQn8sHykG66danyWVY5xxuGBJkUiEKRgGV96SRCBNlNz/jpK/vUpVSKsIAQBjAB5umafklDOCjCQMgCAMgCAMgCAMgCAMgCAMg3BkGYx1SqqmpYVxaDzs+M9dyWC6Bl3ggDJrBPZSa0zD/20MYwDvoD4OL1aDdHLYDfq3XPvN0T/+2Adyr85hwuRWMQ6p5nfJxqCmXus789d4aBoda8jZAgL088Ziw6V1c3+7lbCOAV+oLg/ndXs5DfHvgr/fmrWHeCs6bA7C7p35A7DsmbO4BdtX5zaB92x+1/b/22oA5bRrJeQF2d2cYAP+VMACCMACCMACCMACCMACCMACCMACCMAB+EQbArNYfqP+GEJ9BQKwAAAAASUVORK5CYII=" InformativeScreenshot="4160198cc45d3049fd0b1507077d0fe5.png" ScopeSelectorArgument="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Find and Replace' /&gt;" SearchSteps="Selector, FuzzySelector" Version="V1" Visibility="Interactive">
                          <uix:TargetAnchorable.Anchors>
                            <scg:List x:TypeArguments="uix:ITarget" Capacity="1">
                              <uix:Target DesignTimeRectangle="265, 196, 117, 24" FriendlyName="'Sheet'" FullSelectorArgument="&lt;uia cls='SysListView32' /&gt;&lt;uia automationid='HeaderItem 1' name='Sheet' role='header item' /&gt;" FuzzySelectorArgument="&lt;uia cls='SysListView32' /&gt;&lt;uia automationid='HeaderItem 1' name='Sheet' role='header item' check:fulltext='Sheet' /&gt;" ImageBase64="iVBORw0KGgoAAAANSUhEUgAAAHkAAAAcCAYAAABFwxCgAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAEZSURBVGhD7dZNDsIgEIZhzsWBOIgbt5zGy7DuOUZ+7dC/BEqMMt+bkNixdfNIW/V4WsKaeylC0xeRl2WJB2ieuCmQJw3IAgKygIAsICALCMgCArKA2pFfhpRSeWmyLg7JfD7fbeRvoVAbsrOkDwGA/Mt1IBvPsC3D2HWX60opfJ93v+FXb+fs2K/6N1Bvbcg+Z3UEqKwKThnGW/r6Z3iZcr4jq9ddejzPfxj4DqsZOZVRtfU85ZjD8ON8LlsJ9moO5JF1IofC7juD2SIfobXOUW9fQE7n7Z+vZ3Mgj64NOb54sVtsEvZdIfuq69iL28k8PKvDDC9eY7qxk9G/BGQBAVlAQBYQkAUEZAEBWUBAFtAOGc0dkKeP6A2SdC4LDWaosgAAAABJRU5ErkJggg==" SearchSteps="Selector, FuzzySelector" />
                            </scg:List>
                          </uix:TargetAnchorable.Anchors>
                        </uix:TargetAnchorable>
                      </uix:NCheckState.Target>
                    </uix:NCheckState>
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelApplicationCard.Body>
            </ueab:ExcelApplicationCard>
          </Sequence>
        </ActivityAction>
      </ueab:ExcelProcessScopeX.Body>
    </ueab:ExcelProcessScopeX>
  </Sequence>
</Activity>